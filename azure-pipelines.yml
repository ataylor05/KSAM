trigger:
- master

pool: k8s-linux

variables:
- name: Repo-URL
  value: ataylorregistry.azurecr.io
- name: Image-Name
  value: ksam
- name: Image-Tag
  value: 1.0 

steps:
- task: AzureKeyVault@1
  displayName: 'Download secrets'
  inputs:
    azureSubscription: 'AKS'
    KeyVaultName: 'KSAM'
    SecretsFilter: 'Az-Client-Id,Az-Client-Secret,Az-Tenant-Id,CR-Username,CR-Password,kubeconfig'
    RunAsPreJob: false

- task: replacetokens@3
  displayName: 'Replace tokens in Dockerfile'
  inputs:
    rootDirectory: '$(Pipeline.Workspace)'
    targetFiles: '**/Dockerfile'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: true

- task: CmdLine@2
  displayName: 'Build Docker image'
  inputs:
    script: |
      echo  "$(kubeconfig)" > kubeconfig
      docker build -t $(Repo-URL)/$(Image-Name):$(Image-Tag) .
    workingDirectory: '$(Pipeline.Workspace)'

- task: CmdLine@2
  displayName: 'Push Docker image'
  inputs:
    script: |
      docker login $(Repo-URL) --username $(CR-Username) --password $(CR-Password)
      docker push $(Repo-URL)/$(Image-Name):$(Image-Tag)
    workingDirectory: '$(Pipeline.Workspace)'

- task: replacetokens@3
  displayName: 'Replace tokens in k8s.yaml'
  inputs:
    rootDirectory: '$(Pipeline.Workspace)'
    targetFiles: '**/k8s.yaml'
    encoding: 'auto'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'artifacts'
    publishLocation: 'pipeline'